% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/report_errors.r
\name{report}
\alias{report}
\title{Generate a report for screening disagreements between human and AI decisions}
\usage{
report(
  data,
  studyid,
  title,
  abstract,
  gpt_answer,
  human_code,
  final_decision_gpt_num,
  file,
  format = "html",
  open = TRUE,
  document_title,
  document_subtitle = "",
  directory = getwd()
)
}
\arguments{
\item{data}{Data frame containing the screening data of disagreements between human decisions and GPT decisions.}

\item{studyid}{Column name for the study ID.}

\item{title}{Column name for the title.}

\item{abstract}{Column name for the abstract.}

\item{gpt_answer}{Column name for the AI's answer.}

\item{human_code}{Column name for the human screening decision (numeric 0/1).}

\item{final_decision_gpt_num}{Column name for the final numeric GPT decision (0/1).}

\item{file}{Name of the output file.}

\item{format}{Format of the output file. Valid formats are 'html', 'pdf', 'docx'.}

\item{open}{Logical indicating whether to open the report after generation. Default is TRUE.}

\item{document_title}{Title of the document.}

\item{document_subtitle}{Subtitle of the document. Default is an empty string.}

\item{directory}{Directory where the output file will be saved. Default is the current working directory.}
}
\value{
An object of class \code{'report'}. The object is a list containing the following components:
\item{file_out}{string indicating the path to the generated report file.}
\item{...}{some additional attributed values/components, including an attributed list with the arguments used in the function.}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}\if{html}{\out{<br>}}
\if{html}{\out{<br>}}
This function generates a report for screening disagreements between human and GPT decisions.
It extracts information from the provided data. The function then compiles this information into a
report using Quarto. The report can be saved in formats as HTML, PDF, Word, or more. The generated
report includes sections for each study, displaying the study ID, title, abstract, and the decision
generated by the GPT API model. The report also includes a section for a comment on the GPT decision,
which the user will provide. The function also provides options to customize the document title,
subtitle, and output directory.
}
\examples{
\dontrun{
# Generate a report from the disagreements data
report(
  data = disagreements,
  studyid = studyid,
  title = title,
  abstract = abstract,
  gpt_answer = longest_answer,
  human_code = human_code,
  final_decision_gpt_num = final_decision_gpt_num,
  file = "Screening_Disagreements_Report.qmd",
  format = "html",
  document_title = "Study Report - Disagreement Explanations",
  open = TRUE
)
}

}
