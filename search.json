[{"path":"https://mikkelvembye.github.io/AIscreenR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mikkel H. Vembye. Author, maintainer.","code":""},{"path":"https://mikkelvembye.github.io/AIscreenR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vembye M (2023). AIscreenR: AI screening tools systematic reviews. R package version 0.0.0.9999, https://mikkelvembye.github.io/AIscreenR/.","code":"@Manual{,   title = {AIscreenR: AI screening tools for systematic reviews},   author = {Mikkel H. Vembye},   year = {2023},   note = {R package version 0.0.0.9999},   url = {https://mikkelvembye.github.io/AIscreenR/}, }"},{"path":"https://mikkelvembye.github.io/AIscreenR/index.html","id":"aiscreenr-ai-screening-tools-in-r-for-systematic-reviewing","dir":"","previous_headings":"","what":"AI screening tools for systematic reviews","title":"AI screening tools for systematic reviews","text":"goal AIscreenR use AI tools support screening processes (including title abstract screening) systematic reviews related literature reviews.","code":""},{"path":"https://mikkelvembye.github.io/AIscreenR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"AI screening tools for systematic reviews","text":"can install development version AIscreenR GitHub : Small example ask question ChatGPT","code":"# install.packages(\"devtools\") devtools::install_github(\"MikkelVembye/AIscreenR\") # Find your api key at https://platform.openai.com/account/api-keys  # Thereafter, either encrypt it with the secret functions from the httr2 package # see https://httr2.r-lib.org/reference/secrets.html or run set_api_key()  # and then enter you key. library(AIscreenR) library(httr2) #> Warning: package 'httr2' was built under R version 4.2.3  set_api_key(AIscreenR:::testing_key_chatgpt())  q <- \"What is a carrot?\" ask_chatgpt(q, time_info = TRUE) #> # A tibble: 1 × 2 #>   answer                                                                run_time #>   <chr>                                                                    <dbl> #> 1 A carrot is a root vegetable that is orange in color and is known fo…     7.09 # Find documentation behind by running the below code ?AIscreenR::ask_chatgpt"},{"path":"https://mikkelvembye.github.io/AIscreenR/reference/ask_chatgpt.html","id":null,"dir":"Reference","previous_headings":"","what":"Asking a single question to ChatGPT — ask_chatgpt","title":"Asking a single question to ChatGPT — ask_chatgpt","text":"Asking single question ChatGPT","code":""},{"path":"https://mikkelvembye.github.io/AIscreenR/reference/ask_chatgpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asking a single question to ChatGPT — ask_chatgpt","text":"","code":"ask_chatgpt(   question,   api_key = get_api_key(),   model = \"gpt-3.5-turbo\",   sleep_time = 0,   time_info = FALSE,   reps = 1,   seed = NULL,   ... )"},{"path":"https://mikkelvembye.github.io/AIscreenR/reference/ask_chatgpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asking a single question to ChatGPT — ask_chatgpt","text":"question Character question want ChatGPT answer. api_key Numerical value personal API key. Find https://platform.openai.com/account/api-keys model Character indicating ChatGPT model use. Default \"gpt-3.5-turbo\". sleep_time Numerical value indicating seconds sleeping time questions. especially helpful pay---go user. information see https://platform.openai.com/docs/guides/rate-limits/---rate-limits---api time_info Logical indicating time answer returned. reps Numerical indicating number times question sent ChatGPT. can useful test consistency answers. Default 1. seed Numerical value seed ensure proper, parallel-safe random numbers produced. ... time functions added RETRY. See https://httr.r-lib.org/reference/RETRY.html","code":""},{"path":"https://mikkelvembye.github.io/AIscreenR/reference/ask_chatgpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Asking a single question to ChatGPT — ask_chatgpt","text":"tibble ChatGPT answer question.","code":""},{"path":"https://mikkelvembye.github.io/AIscreenR/reference/ask_chatgpt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Asking a single question to ChatGPT — ask_chatgpt","text":"","code":"if (FALSE) {  # Find your api key at https://platform.openai.com/account/api-keys api_key <- 123456789  q <- \"What is a carrot?\" ask_chatgpt(q, api_key = api_key, sleep_time = 0)  }"},{"path":"https://mikkelvembye.github.io/AIscreenR/reference/get_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Get API key from temporary R environment variable — get_api_key","title":"Get API key from temporary R environment variable — get_api_key","text":"Get API key temporary R environment variable","code":""},{"path":"https://mikkelvembye.github.io/AIscreenR/reference/get_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get API key from temporary R environment variable — get_api_key","text":"","code":"get_api_key(env_var = \"CHATGPT_KEY\")"},{"path":"https://mikkelvembye.github.io/AIscreenR/reference/get_api_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get API key from temporary R environment variable — get_api_key","text":"env_var Character string indicating name temporary R environment variable API key used AI model. Currently, argument takes env_var = \"CHATGPT_KEY\". See set_api_key() set/create variable.","code":""},{"path":"https://mikkelvembye.github.io/AIscreenR/reference/get_api_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get API key from temporary R environment variable — get_api_key","text":"specified API key (NOTE: Avoid exposing console).","code":""},{"path":[]},{"path":"https://mikkelvembye.github.io/AIscreenR/reference/get_api_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get API key from temporary R environment variable — get_api_key","text":"","code":"if (FALSE) { get_api_key() }"},{"path":"https://mikkelvembye.github.io/AIscreenR/reference/set_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating a temporary R environment API key variable — set_api_key","title":"Creating a temporary R environment API key variable — set_api_key","text":"function automatically sets/creates interim R environment variable API key call given AI model (e.g. ChatGPT). Thereby users avoid exposing API keys. API key set console, /can revealed via .Rhistory. Find information issue https://httr2.r-lib.org/articles/wrapping-apis.html","code":""},{"path":"https://mikkelvembye.github.io/AIscreenR/reference/set_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating a temporary R environment API key variable — set_api_key","text":"","code":"set_api_key(key, env_var = \"CHATGPT_KEY\")"},{"path":"https://mikkelvembye.github.io/AIscreenR/reference/set_api_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating a temporary R environment API key variable — set_api_key","text":"key Character string (ideally encrypt) API key. provided returns password box true API key can entered secretly. env_var Character string indicating name temporary R environment variable API key used AI model. Currently, argument takes env_var = \"CHATGPT_KEY\".","code":""},{"path":"https://mikkelvembye.github.io/AIscreenR/reference/set_api_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating a temporary R environment API key variable — set_api_key","text":"temporary environment variable name env_var. key missing, returns password box true API key can entered.","code":""},{"path":"https://mikkelvembye.github.io/AIscreenR/reference/set_api_key.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creating a temporary R environment API key variable — set_api_key","text":"set_api_key() successfully executed, get_api_key() automatically retrieves API key R environment users need specify API running functions package call API.","code":""},{"path":[]},{"path":"https://mikkelvembye.github.io/AIscreenR/reference/set_api_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creating a temporary R environment API key variable — set_api_key","text":"","code":"if (FALSE) { set_api_key() }"},{"path":"https://mikkelvembye.github.io/AIscreenR/reference/tabscreen_chatgpt.html","id":null,"dir":"Reference","previous_headings":"","what":"Title and abstract screening with ChatGPT — tabscreen_chatgpt","title":"Title and abstract screening with ChatGPT — tabscreen_chatgpt","text":"function supports conduct title abstract screening ChatGPT R. function allow run title abstract screening across multiple prompts repeated questions check consistency across answers.","code":""},{"path":"https://mikkelvembye.github.io/AIscreenR/reference/tabscreen_chatgpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title and abstract screening with ChatGPT — tabscreen_chatgpt","text":"","code":"tabscreen_chatgpt(   data,   prompt,   studyid,   title,   abstract,   api_key = get_api_key(),   arrange_var = studyid,   model = \"gpt-3.5-turbo\",   sleep_time = 0,   time_info = FALSE,   reps = 1,   seed = NULL,   ... )"},{"path":"https://mikkelvembye.github.io/AIscreenR/reference/tabscreen_chatgpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title and abstract screening with ChatGPT — tabscreen_chatgpt","text":"data Insert prompt Insert studyid Insert title Insert abstract Insert api_key Numerical value personal API key. Find https://platform.openai.com/account/api-keys arrange_var Function indicating variables determing arrangement data. Default studyid. model Character indicating ChatGPT model use. Default \"gpt-3.5-turbo\". sleep_time Numerical value indicating seconds sleeping time questions. especially helpful pay---go user. information see https://platform.openai.com/docs/guides/rate-limits/---rate-limits---api time_info Logical indicating time answer returned. reps Numerical indicating number times question sent ChatGPT. can useful test consistency answers. Default 1. seed Numerical value seed ensure proper, parallel-safe random numbers produced. ... time functions added RETRY. See https://httr.r-lib.org/reference/RETRY.html","code":""},{"path":"https://mikkelvembye.github.io/AIscreenR/reference/tabscreen_chatgpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title and abstract screening with ChatGPT — tabscreen_chatgpt","text":"tibble answer run_time time_info = TRUE.","code":""},{"path":"https://mikkelvembye.github.io/AIscreenR/reference/tabscreen_chatgpt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title and abstract screening with ChatGPT — tabscreen_chatgpt","text":"","code":"if (FALSE) { library(future)  # Find your api key at https://platform.openai.com/account/api-keys api_key <- 123456789  data <- load(\"data.RData\") prompts <- paste(\"Prompt\", 1:3)  plan(multisession, workers = 7)  system.time(  test_dat <-   tabscreen_chatgpt(     data = data,     prompt = prompts,     studyid = studyid,     title = Title,     abstract = Abstract  ) )  }"}]
